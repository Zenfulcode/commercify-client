// Code generated by tygo. DO NOT EDIT.
// Generated types for Commercify API
// Do not edit this file directly
import type {
  AddressDTO,
  CardDetailsDTO,
  CheckoutDTO,
  OrderDTO,
  OrderSummaryDTO,
  OrderStatus,
  ShippingOptionDTO,
  UserDTO,
} from "./dtos";

//////////
// source: category_contract.go

/**
 * CreateCategoryRequest represents the data needed to create a new category
 */
export interface CreateCategoryRequest {
  name: string;
  description: string;
  parent_id?: number /* uint */;
}
/**
 * UpdateCategoryRequest represents the data needed to update an existing category
 */
export interface UpdateCategoryRequest {
  name?: string;
  description?: string;
  parent_id?: number /* uint */;
}

//////////
// source: checkout_contract.go

/**
 * AddToCheckoutRequest represents the data needed to add an item to a checkout
 */
export interface AddToCheckoutRequest {
  sku: string;
  quantity: number /* int */;
  currency?: string; // Optional currency for checkout creation/updates
}
/**
 * UpdateCheckoutItemRequest represents the data needed to update a checkout item
 */
export interface UpdateCheckoutItemRequest {
  quantity: number /* int */;
}
/**
 * SetShippingAddressRequest represents the data needed to set a shipping address
 */
export interface SetShippingAddressRequest {
  address_line1: string;
  address_line2: string;
  city: string;
  state: string;
  postal_code: string;
  country: string;
}
/**
 * SetBillingAddressRequest represents the data needed to set a billing address
 */
export interface SetBillingAddressRequest {
  address_line1: string;
  address_line2: string;
  city: string;
  state: string;
  postal_code: string;
  country: string;
}
/**
 * SetCustomerDetailsRequest represents the data needed to set customer details
 */
export interface SetCustomerDetailsRequest {
  email: string;
  phone: string;
  full_name: string;
}
/**
 * SetShippingMethodRequest represents the data needed to set a shipping method
 */
export interface SetShippingMethodRequest {
  shipping_method_id: number /* uint */;
}
/**
 * SetCurrencyRequest represents the data needed to change checkout currency
 */
export interface SetCurrencyRequest {
  currency: string;
}
/**
 * ApplyDiscountRequest represents the data needed to apply a discount
 */
export interface ApplyDiscountRequest {
  discount_code: string;
}
/**
 * CheckoutListResponse represents a paginated list of checkouts
 */
export interface CheckoutListResponse {
  ListResponseDTO: ListResponseDTO<CheckoutDTO>;
}
/**
 * CheckoutSearchRequest represents the parameters for searching checkouts
 */
export interface CheckoutSearchRequest {
  user_id?: number /* uint */;
  status?: string;
  PaginationDTO: PaginationDTO;
}
export interface CheckoutCompleteResponse {
  order: OrderSummaryDTO;
  action_required?: boolean;
  redirect_url?: string;
}
/**
 * CompleteCheckoutRequest represents the data needed to convert a checkout to an order
 */
export interface CompleteCheckoutRequest {
  payment_provider: string;
  payment_data: PaymentData;
}
export interface PaymentData {
  card_details?: CardDetailsDTO;
  phone_number?: string;
}

//////////
// source: common_contract.go

/**
 * PaginationDTO represents pagination parameters
 */
export interface PaginationDTO {
  page: number /* int */;
  page_size: number /* int */;
  total: number /* int */;
}
/**
 * ResponseDTO is a generic response wrapper
 */
export interface ResponseDTO<T extends any> {
  success: boolean;
  message?: string;
  data?: T;
  error?: string;
}
/**
 * ListResponseDTO is a generic list response wrapper
 */
export interface ListResponseDTO<T extends any> {
  success: boolean;
  message?: string;
  data: T[];
  pagination: PaginationDTO;
  error?: string;
}

//////////
// source: currency_contract.go

/**
 * CreateCurrencyRequest represents a request to create a new currency
 */
export interface CreateCurrencyRequest {
  code: string;
  name: string;
  symbol: string;
  exchange_rate: number /* float64 */;
  is_enabled: boolean;
  is_default?: boolean;
}
/**
 * UpdateCurrencyRequest represents a request to update an existing currency
 */
export interface UpdateCurrencyRequest {
  name?: string;
  symbol?: string;
  exchange_rate?: number /* float64 */;
  is_enabled?: boolean;
  is_default?: boolean;
}
/**
 * ConvertAmountRequest represents a request to convert an amount between currencies
 */
export interface ConvertAmountRequest {
  amount: number /* float64 */;
  from_currency: string;
  to_currency: string;
}
/**
 * SetDefaultCurrencyRequest represents a request to set a currency as default
 */
export interface SetDefaultCurrencyRequest {
  code: string;
}
/**
 * ConvertAmountResponse represents the response for currency conversion
 */
export interface ConvertAmountResponse {
  from: ConvertedAmountDTO;
  to: ConvertedAmountDTO;
}
/**
 * ConvertedAmountDTO represents an amount in a specific currency
 */
export interface ConvertedAmountDTO {
  currency: string;
  amount: number /* float64 */;
  cents: number /* int64 */;
}
/**
 * DeleteCurrencyResponse represents the response after deleting a currency
 */
export interface DeleteCurrencyResponse {
  status: string;
  message: string;
}

//////////
// source: discount_contract.go

/**
 * CreateDiscountRequest represents the data needed to create a new discount
 */
export interface CreateDiscountRequest {
  code: string;
  type: string;
  method: string;
  value: number /* float64 */;
  min_order_value?: number /* float64 */;
  max_discount_value?: number /* float64 */;
  product_ids?: number /* uint */[];
  category_ids?: number /* uint */[];
  start_date?: string;
  end_date?: string;
  usage_limit?: number /* int */;
}
/**
 * UpdateDiscountRequest represents the data needed to update a discount
 */
export interface UpdateDiscountRequest {
  code?: string;
  type?: string;
  method?: string;
  value?: number /* float64 */;
  min_order_value?: number /* float64 */;
  max_discount_value?: number /* float64 */;
  product_ids?: number /* uint */[];
  category_ids?: number /* uint */[];
  start_date: string;
  end_date: string;
  usage_limit?: number /* int */;
  active: boolean;
}
/**
 * ValidateDiscountRequest represents the data needed to validate a discount code
 */
export interface ValidateDiscountRequest {
  discount_code: string;
}
/**
 * ValidateDiscountResponse represents the response for discount validation
 */
export interface ValidateDiscountResponse {
  valid: boolean;
  reason?: string;
  discount_id?: number /* uint */;
  code?: string;
  type?: string;
  method?: string;
  value?: number /* float64 */;
  min_order_value?: number /* float64 */;
  max_discount_value?: number /* float64 */;
}

//////////
// source: email_contract.go

/**
 * EmailTestRequest represents the request body for testing emails
 */
export interface EmailTestRequest {
  email: string;
}

//////////
// source: order_contract.go

/**
 * CreateOrderRequest represents the data needed to create a new order
 */
export interface CreateOrderRequest {
  first_name: string;
  last_name: string;
  email: string;
  phone_number?: string;
  shipping_address: AddressDTO;
  billing_address: AddressDTO;
  shipping_method_id: number /* uint */;
}
/**
 * CreateOrderItemRequest represents the data needed to create a new order item
 */
export interface CreateOrderItemRequest {
  product_id: number /* uint */;
  variant_id?: number /* uint */;
  quantity: number /* int */;
}
/**
 * UpdateOrderRequest represents the data needed to update an existing order
 */
export interface UpdateOrderRequest {
  status?: string;
  payment_status?: string;
  tracking_number?: string;
  estimated_delivery?: string;
}
/**
 * OrderSearchRequest represents the parameters for searching orders
 */
export interface OrderSearchRequest {
  user_id?: number /* uint */;
  status?: OrderStatus;
  payment_status?: string;
  start_date?: string;
  end_date?: string;
  pagination: PaginationDTO;
}

//////////
// source: payments_contracts.go

export interface CapturePaymentRequest {
  amount?: number /* float64 */; // Optional when is_full is true
  is_full: boolean; // Whether to capture the full amount
}
export interface RefundPaymentRequest {
  amount?: number /* float64 */; // Optional when is_full is true
  is_full: boolean; // Whether to refund the full captured amount
}

//////////
// source: products_contract.go

/**
 * CreateProductRequest represents the data needed to create a new product
 */
export interface CreateProductRequest {
  name: string;
  description: string;
  currency: string;
  category_id: number /* uint */;
  images: string[];
  active: boolean;
  variants: CreateVariantRequest[];
}
/**
 * AttributeKeyValue represents a key-value pair for product attributes
 */
export interface AttributeKeyValue {
  name: string;
  value: string;
}
/**
 * CreateVariantRequest represents the data needed to create a new product variant
 */
export interface CreateVariantRequest {
  sku: string;
  stock: number /* int */;
  attributes: AttributeKeyValue[];
  images: string[];
  is_default: boolean;
  weight: number /* float64 */;
  price: number /* float64 */;
}
/**
 * UpdateProductRequest represents the data needed to update an existing product
 */
export interface UpdateProductRequest {
  name?: string;
  description?: string;
  currency?: string;
  category_id?: number /* uint */;
  images?: string[];
  active?: boolean;
  variants?: UpdateVariantRequest[]; // Optional, can be nil if no variants are updated
}
/**
 * UpdateVariantRequest represents the data needed to update an existing product variant
 */
export interface UpdateVariantRequest {
  sku?: string;
  stock?: number /* int */;
  attributes?: AttributeKeyValue[];
  images?: string[];
  is_default?: boolean;
  weight?: number /* float64 */;
  price?: number /* float64 */;
}

//////////
// source: shipping_contract.go

/**
 * CreateShippingMethodRequest represents the data needed to create a new shipping method
 */
export interface CreateShippingMethodRequest {
  name: string;
  description: string;
  estimated_delivery_days: number /* int */;
}
/**
 * UpdateShippingMethodRequest represents the data needed to update a shipping method
 */
export interface UpdateShippingMethodRequest {
  name?: string;
  description?: string;
  estimated_delivery_days?: number /* int */;
  active: boolean;
}
/**
 * CreateShippingZoneRequest represents the data needed to create a new shipping zone
 */
export interface CreateShippingZoneRequest {
  name: string;
  description: string;
  countries: string[];
  states: string[];
  zip_codes: string[];
}
/**
 * UpdateShippingZoneRequest represents the data needed to update a shipping zone
 */
export interface UpdateShippingZoneRequest {
  name?: string;
  description?: string;
  countries?: string[];
  states?: string[];
  zip_codes?: string[];
  active: boolean;
}
/**
 * CreateShippingRateRequest represents the data needed to create a new shipping rate
 */
export interface CreateShippingRateRequest {
  shipping_method_id: number /* uint */;
  shipping_zone_id: number /* uint */;
  base_rate: number /* float64 */;
  min_order_value: number /* float64 */;
  free_shipping_threshold?: number /* float64 */;
  active: boolean;
}
/**
 * CreateValueBasedRateRequest represents the data needed to create a value-based rate
 */
export interface CreateValueBasedRateRequest {
  shipping_rate_id: number /* uint */;
  min_order_value: number /* float64 */;
  max_order_value: number /* float64 */;
  rate: number /* float64 */;
}
/**
 * UpdateShippingRateRequest represents the data needed to update a shipping rate
 */
export interface UpdateShippingRateRequest {
  base_rate?: number /* float64 */;
  min_order_value?: number /* float64 */;
  free_shipping_threshold?: number /* float64 */;
  active: boolean;
}
/**
 * CreateWeightBasedRateRequest represents the data needed to create a weight-based rate
 */
export interface CreateWeightBasedRateRequest {
  shipping_rate_id: number /* uint */;
  min_weight: number /* float64 */;
  max_weight: number /* float64 */;
  rate: number /* float64 */;
}
/**
 * CalculateShippingOptionsRequest represents the request to calculate shipping options
 */
export interface CalculateShippingOptionsRequest {
  address: AddressDTO;
  order_value: number /* float64 */;
  order_weight: number /* float64 */;
}
/**
 * CalculateShippingOptionsResponse represents the response with available shipping options
 */
export interface CalculateShippingOptionsResponse {
  options: ShippingOptionDTO[];
}
/**
 * CalculateShippingCostRequest represents the request to calculate shipping cost for a specific rate
 */
export interface CalculateShippingCostRequest {
  order_value: number /* float64 */;
  order_weight: number /* float64 */;
}
/**
 * CalculateShippingCostResponse represents the response with calculated shipping cost
 */
export interface CalculateShippingCostResponse {
  cost: number /* float64 */;
}

//////////
// source: user_contract.go

/**
 * CreateUserRequest represents the data needed to create a new user
 */
export interface CreateUserRequest {
  email: string;
  password: string;
  first_name: string;
  last_name: string;
}
/**
 * UpdateUserRequest represents the data needed to update an existing user
 */
export interface UpdateUserRequest {
  first_name?: string;
  last_name?: string;
}
/**
 * UserLoginRequest represents the data needed for user login
 */
export interface UserLoginRequest {
  email: string;
  password: string;
}
/**
 * UserLoginResponse represents the response after successful login
 */
export interface UserLoginResponse {
  user: UserDTO;
  access_token: string;
  refresh_token: string;
  expires_in: number /* int */;
}
/**
 * ChangePasswordRequest represents the data needed to change a user's password
 */
export interface ChangePasswordRequest {
  current_password: string;
  new_password: string;
}
